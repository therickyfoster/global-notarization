name: Global Repo Notarization

on:
  workflow_call:
    secrets:
      NOTARIZE_PAT:
        required: true   # <— the caller must pass this

# We will push with the PAT, so the default token can stay read-only:
permissions:
  contents: write

jobs:
  notarize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout caller repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install deps (Python, OTS, IPFS)
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y python3-pip tar curl wget rsync jq
          pip3 install --break-system-packages opentimestamps-client
          wget https://dist.ipfs.tech/kubo/v0.29.0/kubo_v0.29.0_linux-amd64.tar.gz -O ipfs.tar.gz
          tar -xvzf ipfs.tar.gz
          sudo mv kubo/ipfs /usr/local/bin/ipfs
          ipfs --version

      - name: Initialize IPFS (offline)
        run: |
          set -e
          ipfs init || true
          ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '["*"]'
          ipfs config Addresses.API /ip4/127.0.0.1/tcp/5001
          ipfs config --bool Swarm.DisableNatPortMap true
          nohup ipfs daemon --offline >/dev/null 2>&1 &
          sleep 5

      # Deterministic snapshot of the committed tree:
      - name: Create snapshot & hash (git archive)
        run: |
          set -e
          git -c core.autocrlf=false archive --format=tar.gz -o snapshot.tar.gz HEAD
          sha256sum snapshot.tar.gz | awk '{print $1}' > snapshot.hash

      - name: Timestamp with OpenTimestamps
        run: |
          set -e
          ots stamp snapshot.hash
          ots upgrade snapshot.hash.ots || true

      - name: Upload snapshot to IPFS
        id: ipfs
        run: |
          set -e
          CID=$(ipfs add -q snapshot.tar.gz)
          echo "cid=$CID" >> "$GITHUB_OUTPUT"

      - name: Update PROOF.md
        run: |
          set -e
          {
            echo "# Proof of Ownership"
            echo "SHA-256: $(cat snapshot.hash)"
            echo "Bitcoin Timestamp File: snapshot.hash.ots"
            echo "IPFS CID: ${{ steps.ipfs.outputs.cid }}"
            echo "Repo: $GITHUB_REPOSITORY"
            echo "Commit: $GITHUB_SHA"
            echo "Workflow: $GITHUB_WORKFLOW • Run #$GITHUB_RUN_NUMBER"
          } > PROOF.md

      - name: Commit & push proof using PAT (cross-repo safe)
        env:
          REPO_URL: https://x-access-token:${{ secrets.NOTARIZE_PAT }}@github.com/${{ github.repository }}.git
        run: |
          set -e
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name  "github-actions[bot]"
          git add PROOF.md snapshot.hash snapshot.hash.ots
          git commit -m "Auto-notarized repo snapshot [skip ci]" || echo "No changes"
          git remote set-url origin "$REPO_URL"
          git push || echo "Push skipped"
